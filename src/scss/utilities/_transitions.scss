.trans {
	/*
	* The will-change CSS property provides a way for authors to hint browsers about the kind of changes
	* to be expected on an element, so that the browser can setup appropriate optimizations ahead of time
	* before the element is actually changed.
	*/
	will-change: transform;
	transition: transform 0.1s linear;
}

// Loaders

/* From cssbuttons.io by @gagan-gv */
// -----
// <div class="spinner">
//		<div class="loader l1"></div>
//		<div class="loader l2"></div>
//	</div>
// -----

.page-load {
	position: absolute;
	z-index: 1000;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: $grey2;
	display: flex;
	align-items: center;
	justify-content: center;
}

.lg-loader--page-load {
	opacity: 0;
	transition: opacity 1.5s linear;
 
	&.is-visible {
	  opacity: 1;
	}
 }

.spinner {
	border: 0 solid transparent;
	border-radius: 50%;
	width: 150px;
	height: 150px;
}

.loader {
	width: inherit;
	height: inherit;
	position: absolute;
	&::before,
	&::after {
		content: '';
		border: 6px solid ocGray(9);
		border-radius: 50%;
		width: inherit;
		height: inherit;
		position: absolute;
		opacity: 1;
	}
	&.l1::before,
	&.l1::after {
		animation: clockwiseZ 2.5s infinite;
	}
	&.l2::after,
	&.l2::before {
		animation: anticlockwiseZ 2.5s infinite;
	}
}

@keyframes clockwiseZ {
	0%, 100% {
		transform: rotateY(0);
	}
	
	50% {
		transform: rotateY(180deg) skew(-10deg, -5deg);
	}
}

@keyframes anticlockwiseZ {
	0%, 100% {
		transform: rotateX(0);
	}
	
	50% {
		transform: rotateX(-180deg) skew(10deg, 5deg);
	}
}